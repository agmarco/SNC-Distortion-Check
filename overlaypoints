#!/usr/bin/env python
import argparse
import itertools

import scipy.io
import matplotlib.pylab as plt
import numpy as np

from slicer import PointsSlicer, render_slices, render_points


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('voxels')
    parser.add_argument('points', nargs='+', default=None)
    args = parser.parse_args()

    input_data = scipy.io.loadmat(args.voxels)
    voxels = input_data['voxels']
    ijk_to_xyz = input_data['ijk_to_patient_xyz_transform']

    colors = itertools.cycle(["c", "g", "r", "y", "k"])
    descriptors = []
    for path, color in zip(args.points, colors):
        points_xyz = scipy.io.loadmat(path)['points']
        descriptors.append({
            'points_xyz': points_xyz,
            'scatter_kwargs': {'color': color, 'label': path},
        })

    slicer = PointsSlicer(voxels, ijk_to_xyz, descriptors)
    slicer.add_renderer(render_slices)
    slicer.add_renderer(render_points)
    slicer.draw()
    plt.show()
