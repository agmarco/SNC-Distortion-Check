#!/usr/bin/env python
#
# Script to convert a CSV file with three columns (x, y, z) of points
# into a points file
import sys
import logging
import argparse

import numpy as np

import process.file_io


logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.DEBUG)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('csvfile', nargs='+', help='Input path to read csv-file')
    args = parser.parse_args()

    for csvfile in args.csvfile:
        pointsfile = f'{csvfile[:-4]}.mat'

        logger.info(f'Converting {csvfile} to {pointsfile}')

        points = np.genfromtxt(csvfile, delimiter=',')

        if points.size == 3:
            logger.info('Detected a single point, reshaping to a 3x1 array')
            points = points.reshape((1, 3))

        if len(points.shape) != 2:
            logger.error('Invalid shape {points.shape}')
            sys.exit(1)

        num_dimensions, num_points = points.shape
        if num_dimensions != 3 and num_points == 3:
            logger.info(f'Transposing {num_dimensions}x{num_points} to {num_points}x{num_dimensions}')
            num_points = num_dimensions
            points = points.T
        logger.info(f'Detected {num_points} points')

        process.file_io.save_points(pointsfile, {
            'points': points,
        })
