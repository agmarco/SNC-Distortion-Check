#!/usr/bin/env python
import sys
import os

from algorithm_test_runner.runner import suite_id_to_class_map, initialize_stores
from algorithm_test_runner.util import print_error


def print_usage():
    print('\n'.join([
        'usage:',
        '  algtr [SUITE [CASE]]',
        '  algtr SUITE CASE RESULT [show]',
        '  algtr SUITE CASE RESULT compare [RESULT]',
        '  algtr SUITE CASE RESULT verify',
        '  algtr SUITE CASE RESULT reject',
    ]))


def parse_arguments(arguments):
    suite = None
    case = None
    result = None
    command = None
    flags = {}
    for arg in arguments:
        if arg in ['-h', '--help']:
            flags['help'] = True
        elif arg in ['--collect-only']:
            flags['collect_only'] = True
        elif suite is None:
            suite = arg
        elif case is None:
            case = arg
        elif result is None:
            result = arg
        elif command is None:
            command = arg
        else:
            raise ValueError('Too many arguments')
    return suite, case, result, flags


def run_all_suites(stores, flags):
    all_pass = True
    for suite_class in suite_map.values():
        suite_pass = suite_class(flags).run_all(stores)
        all_pass = all_pass and suite_pass
    return all_pass


if __name__ == '__main__':
    try:
        suite_id, case_id, result_id, flags = parse_arguments(sys.argv[1:])
    except ValueError:
        print_error('Incorrect usage')
        print_usage()
        sys.exit(1)

    if 'help' in flags:
        print_usage()
        sys.exit(0)

    working_directory = os.getcwd()
    suite_map = suite_id_to_class_map(working_directory)
    stores = initialize_stores(working_directory)

    if suite_id is None:
        all_pass = run_all_suites(stores, flags)
        sys.exit(0 if all_pass else 1)

    if suite_id not in suite_map:
        print_error('Unknown suite id "{}"'.format(suite_id))
        sys.exit(1)

    suite_class = suite_map[suite_id]
    suite = suite_class(flags)

    if case_id is None:
        suite_pass = suite.run_all_cases(stores)
        sys.exit(0 if suite_pass else 1)

    if case_id not in suite.case_map:
        print_error('Unknown case "{}.{}"'.format(suite.id(), case_id))
        sys.exit(1)

    case = suite.case_map[case_id]

    if result_id is None:
        case_pass = suite.run_case(stores)
        sys.exit(0 if case_pass else 1)

    # TODO: handle commands
