# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-14 01:17
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import server.django_numpy.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DicomSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('zipped_dicom_files', models.FileField(upload_to='dicom_series/zipped_dicom_files')),
                ('voxels', server.django_numpy.fields.NumpyTextField()),
                ('ijk_to_xyz', server.django_numpy.fields.NumpyTextField()),
                ('shape', server.django_numpy.fields.NumpyTextField()),
                ('series_uid', models.CharField(help_text='The DICOM Series Instance UID, which should uniquely identify a scan', max_length=64, verbose_name='Series Instance UID')),
            ],
            options={
                'verbose_name': 'DICOM Series',
                'verbose_name_plural': 'DICOM Series',
            },
        ),
        migrations.CreateModel(
            name='Fiducials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('fiducials', server.django_numpy.fields.NumpyTextField()),
            ],
            options={
                'verbose_name': 'Fiducials',
                'verbose_name_plural': 'Fiducials',
            },
        ),
        migrations.CreateModel(
            name='GoldenFiducials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('dicom_series', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.DicomSeries')),
                ('fiducials', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Fiducials')),
            ],
            options={
                'verbose_name': 'Golden Fiducials',
                'verbose_name_plural': 'Golden Fiducials',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='This is how the institution will be identified within the UI', max_length=255)),
                ('number_of_licenses', models.PositiveIntegerField(default=1, help_text='The number of machines that the institution is allowed to add')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='This is how the machine will be identified within the UI', max_length=255)),
                ('model', models.CharField(help_text='The model of the MR scanner (e.g. MAGNETOM Vida)', max_length=255)),
                ('manufacturer', models.CharField(help_text='The company that manufactures the MR scanner (e.g. Siemens)', max_length=255)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MachineSequencePair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('tolerance', models.FloatField()),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Machine')),
            ],
            options={
                'verbose_name': 'Machine Sequence Pair',
            },
        ),
        migrations.CreateModel(
            name='Phantom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='This is how the phantom will be identified within the UI', max_length=255)),
                ('model', models.CharField(choices=[('CIRS_603A', '603A'), ('CIRS_604', '604')], help_text='The model of phantom (e.g. the CIRS 603A head phantom)', max_length=255)),
                ('serial_number', models.CharField(help_text="The Phantom's serial number", max_length=255)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('result', models.TextField(null=True)),
                ('processing', models.BooleanField(default=False)),
                ('errors', models.TextField(null=True)),
                ('tolerance', models.FloatField()),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('detected_fiducials', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Fiducials')),
                ('dicom_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.DicomSeries')),
                ('golden_fiducials', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.GoldenFiducials')),
                ('machine_sequence_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.MachineSequencePair')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Deleted items are hidden from non-admins')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='This is how the MR scan sequence type will be identified within the UI', max_length=255)),
                ('instructions', models.TextField(blank=True, default='', help_text='Instructions describing how to capture this type of MR scan sequence')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Institution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='machinesequencepair',
            name='sequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Sequence'),
        ),
        migrations.AddField(
            model_name='goldenfiducials',
            name='phantom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.Phantom'),
        ),
        migrations.AddField(
            model_name='user',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.Institution'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
