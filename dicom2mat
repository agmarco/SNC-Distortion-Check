#!/usr/bin/env python
import argparse
import os

import scipy.io

from dicom_import import combined_series_from_zip
import phantoms


def phantom_name_from_file_name(file_path):
    '''
    In the real application, the phantom name will be derived from user input.

    Expects files to have format:

        NUMBER_MODALITY_PHANTOMNAME_ETC.zip

    '''
    file_name = os.path.basename(file_path)
    file_parts = file_name.split('_')
    if len(file_parts) < 4:
        raise ValueError("Invalid DICOM zip filename format: {}".format(file_name))

    phantom_name = file_parts[2]

    if phantom_name not in phantoms.paramaters:
        raise ValueError("Invalid phantom name: {}".format(phantom_name))
    else:
        return phantom_name


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('zip', help='Zip archive containing DICOM files from a series')
    parser.add_argument('voxels', help='Output path to write voxels mat-file')
    args = parser.parse_args()

    phantom_name = phantom_name_from_file_name(args.zip)

    voxels, ijk_to_xyz = combined_series_from_zip(args.zip)

    scipy.io.savemat(args.voxels, {
        'voxels': voxels,
        'ijk_to_patient_xyz_transform': ijk_to_xyz,
        'phantom_name': phantom_name,
    })
